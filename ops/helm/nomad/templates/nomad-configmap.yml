apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nomad.fullname" . }}-configmap
  labels:
    app.kubernetes.io/name: {{ include "nomad.name" . }}-configmap
    helm.sh/chart: {{ include "nomad.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  nomad.yaml: |
    meta:
      release: "{{ .Release.Name }}"
      service: "{{ .Values.meta.service }}"
      homepage: "{{ .Values.meta.homepage }}"
      source_url: "{{ .Values.meta.source_url }}"
      maintainer_email: "{{ .Values.meta.maintainer_email }}"
      {{ if .Values.meta.deployment }}
      deployment: "{{ .Values.meta.deployment }}"
      {{ end }}
      beta:
        label: "{{ .Values.version.label }}"
        isBeta: {{ .Values.version.isBeta }}
        isTest: {{ .Values.version.isTest }}
        usesBetaData: {{ .Values.version.usesBetaData }}
        officialUrl: "{{ .Values.version.officialUrl }}"
    reprocess_match: {{ .Values.reprocess_match }}
    reprocess_unmatched: {{ .Values.reprocess_unmatched }}
    reprocess_rematch: {{ .Values.reprocess_rematch }}
    process_reuse_parser: {{ .Values.process_reuse_parser }}
    encyclopedia_enabled: {{ .Values.encyclopedia.enabled }}
    aitoolkit_enabled: {{ .Values.aitoolkit.enabled }}
    fs:
      tmp: "{{ .Values.volumes.tmp }}"
      prefix_size: {{ .Values.volumes.prefixSize }}
      working_directory: /app
      {{ if .Values.volumes.archiveVersionSuffix }}
      archive_version_suffix: "{{ .Values.volumes.archiveVersionSuffix }}"
      {{ end }}
    logstash:
      enabled: {{ .Values.logstash.enabled }}
      host: "{{ .Values.logstash.host }}"
      tcp_port: {{ .Values.logstash.port }}
    services:
      api_host: "{{ .Values.proxy.external.host }}"
      api_port: {{ .Values.proxy.external.port }}
      api_base_path: "{{ .Values.proxy.external.path }}"
      api_secret: "{{ .Values.api.secret }}"
      https: {{ .Values.proxy.external.https }}
      upload_limit: {{ .Values.api.uploadLimit }}
      admin_user_id: {{ .Values.keycloak.admin_user_id }}
      readonly: {{ .Values.api.readonly }}
    rabbitmq:
      host: "{{ .Release.Name }}-rabbitmq"
    elastic:
      host: "{{ .Values.elastic.host }}"
      port: {{ .Values.elastic.port }}
      index_name: "{{ .Values.dbname }}"
      materials_index_name: "{{ .Values.dbname }}_materials"
    mongo:
      host: "{{ .Values.mongo.host }}"
      port: {{ .Values.mongo.port }}
      db_name: "{{ .Values.dbname }}"
    mail:
      enabled: {{ .Values.mail.enabled }}
      host: "{{ .Values.mail.host }}"
      {{ if .Values.mail.port }}
      port: {{ .Values.mail.port }}
      {{ end }}
      {{ if .Values.mail.user }}
      user: "{{ .Values.mail.user }}"
      {{ end }}
      {{ if .Values.mail.password }}
      password: "{{ .Values.mail.password }}"
      {{ end }}
      from_address: "{{ .Values.mail.from }}"
    celery:
      routing: "{{ .Values.worker.routing }}"
      timeout: {{ .Values.worker.timeout }}
      acks_late: {{ .Values.worker.acks_late }}
    client:
      user: "{{ .Values.client.username }}"
    keycloak:
      server_url: "{{ .Values.keycloak.serverUrl }}"
      realm_name: "{{ .Values.keycloak.realmName }}"
      username: "{{ .Values.keycloak.username }}"
      client_id: "{{ .Values.keycloak.clientId }}"
    normalize:
      springer_db_path: "{{ .Values.springerDbPath }}"
    datacite:
      enabled: {{ .Values.datacite.enabled }}
      prefix: "{{ .Values.datacite.prefix }}"
